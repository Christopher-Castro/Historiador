version: "3.8"

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: Historiador
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: example
      PGDATA: /var/lib/postgresql/data
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    
 
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: example
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "80:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
      - "db:pgsql-server"
    depends_on:
      - db
  
  # noip:
  #   image:  coppit/no-ip
  #   volumes:
  #     - noip-config:/config
  #     - noip-etc:/etc
    
  # openvpn:
  #   image: kylemanna/openvpn
  #   container_name: openvpn
  #   ports:
  #    - "1194:1194/udp"
  #   volumes:
  #    - openvpn-data:/etc/openvpn
  
  # node:
  #   image: node
  #   working_dir: /home/node/app
  #   environment:
  #     - NODE_ENV=production
  #   volumes:
  #     - ./nodejs/Historiador:/home/node/app
  #   command: "npm run server"
  #   ports: 
  #     - "3001:3001"
  #   depends_on:
  #     - mongo

  # db-setup:
  #   image: christopher57/historiador_image
  #   working_dir: /usr/src/app/historiador-db
  #   command: "node setup.js --yes"
  #   environment:
  #     DB_HOST: db
  #   depends_on:
  #     - mongo
  #     - db

  mqtt:
    image: christopher57/historiador_image
    working_dir: /usr/src/app/historiador-mqtt
    command: "npm run start-dev"
    environment:
      DB_HOST: 'db'
      MONGO_HOST: 'mongodb://root:example@mongo:27017/mqtt?authSource=admin'
    ports: 
      - "1883:1883"
    depends_on:
      - mongo
      - db
  
  agent:
    image: christopher57/historiador_image
    working_dir: /usr/src/app/historiador-agent/gui
    # cambiar a la ejecucion del servidor web
    command: bash -c "npm run build && npm run start-dev"
    environment:
      DB_HOST: db
      MQTT_HOST: mqtt://mqtt
      API_ENDPOINT: http://api:3000
      # SERVER_HOST: http://localhost:8000
    volumes:
      - "../historiador-agent/gui:/usr/src/app/historiador-agent/gui"
    ports: 
      - "8000:8000"
      - "502:502"
      
    # volumes:
    #   - "../historiador-agent/examples:/usr/src/app/historiador-agent/examples"
    #   - "../historiador-agent/gui:/usr/src/app/historiador-agent/gui"
    depends_on:
      - mqtt
      - api

  api:
    image: christopher57/historiador_image
    working_dir: /usr/src/app/historiador-api
    command: "npm run start-dev"
    environment:
      DB_HOST: db
    volumes:
      # - "../historiador-api:/usr/src/app/historiador-api"
      - "../historiador-db/lib:/usr/src/app/historiador-db/lib"
    ports: 
      - "3000:3000"
    depends_on:
      - db

  web:
    image: christopher57/historiador_image
    working_dir: /usr/src/app/historiador-web
    command: "npm run start-dev"
    # volumes:
    #   - "../historiador-web:/usr/src/app/historiador-web"
    environment:
      API_ENDPOINT: http://api:3000
      MQTT_HOST: mqtt://mqtt
    ports: 
      - "8001:8001"
    depends_on:
      - api
      - mqtt

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    volumes:
      - mongodb-data:/data/db
    

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      
    depends_on:
      - mongo
  
  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports: 
      - 3306:3306
      - 33060:33060
    environment:
      MYSQL_ROOT_PASSWORD: example
    volumes:
      - mysql-data:/var/lib/mysql

  adminer:
    image: adminer
    restart: always
    ports:
      - 8082:8080

volumes:
  db-data:
  pgadmin-data:
  openvpn-data:
  noip-config:
  noip-etc:
  
  mongodb-data:
  mysql-data:
